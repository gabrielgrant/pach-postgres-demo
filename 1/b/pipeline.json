{
  "pipeline": {
    "name": "pg-load"
  },
  "transform": {
    "image": "gabrielgrant/pach-postgres-demo-pg-load",
    "cmd": [ "psql",
      "--host=$POSTGRES_SERVICE_HOST",
      "--port=$POSTGRES_SERVICE_PORT",
      "--username=postgres"
    ],
    "env": {
    },
    "stdin": [
        "COPY customers FROM '/pfs/in/customers/customers.csv' DELIMITER ',' CSV HEADER;",
        "COPY orders FROM '/pfs/in/orders/orders.csv' DELIMITER ',' CSV HEADER;"
    ],
    "overwrite": true
  },
  "parallelism_spec": {
    "strategy": "CONSTANT",
    "constant": 1
  },
  "inputs": [
    {
      "repo": {
        "name": "customers"
      },
      "method": "map"
    },
    {
      "repo": {
        "name": "orders"
      },
      "method": "map"
    }
  ]
}


{
  "pipeline": {
    "name": "pg-reports"
  },
  "transform": {
    "image": "gabrielgrant/pach-postgres-pfs-pgdata",
    "cmd": [ "psql",
      "--host=$POSTGRES_SERVICE_HOST",
      "--port=$POSTGRES_SERVICE_PORT",
      "--username=postgres"
    ],
    "env": {
      "PGDATA_INPUT_REPO": "pg-load"
    },
    "stdin": [
        "INSERT into reports (day, total_units) (",
          "SELECT date_trunc('day', created_at) as day, SUM(units) as total_units",
          "FROM orders",
          "GROUP BY date(created_at)",
          "ORDER BY count(created_at) DESC",
        ");"
    ],
    "overwrite": true
  },
  "parallelism_spec": {
    "strategy": "CONSTANT",
    "constant": 1
  },
  "inputs": [
    {
      "repo": {
        "name": "pg-load"
      },
      "method": "map"
    }
  ]
}

{
  "pipeline": {
    "name": "pg-dump"
  },
  "transform": {
    "image": "gabrielgrant/pach-postgres-base",
    "cmd": [ "psql",
      "--host=$POSTGRES_SERVICE_HOST",
      "--port=$POSTGRES_SERVICE_PORT",
      "--username=postgres"
    ],
    "env": {
      "PGDATA": "/pfs/pg-reports"
    },
    "stdin": [
        "COPY reports TO '/pfs/out/reports.csv' DELIMITER ',' CSV HEADER;"
    ]
  },
  "parallelism_spec": {
    "strategy": "CONSTANT",
    "constant": 1
  },
  "inputs": [
    {
      "repo": {
        "name": "pg-reports"
      },
      "method": "map"
    }
  ]
}
